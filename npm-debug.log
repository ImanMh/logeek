0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.5.0
3 info using node@v0.12.5
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/Iman/Documents/projects/logeek',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/Iman/.npm/logeek/1.0.7/package.tgz not in flight; packing
9 info lifecycle logeek@1.0.7~prepublish: logeek@1.0.7
10 silly lifecycle logeek@1.0.7~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/Users/Iman/.npm/logeek/1.0.7/package.tgz',
11 verbose tar pack   '/Users/Iman/Documents/projects/logeek' ]
12 verbose tarball /Users/Iman/.npm/logeek/1.0.7/package.tgz
13 verbose folder /Users/Iman/Documents/projects/logeek
14 verbose addLocalTarball adding from inside cache /Users/Iman/.npm/logeek/1.0.7/package.tgz
15 silly cache afterAdd logeek@1.0.7
16 verbose afterAdd /Users/Iman/.npm/logeek/1.0.7/package/package.json not in flight; writing
17 verbose afterAdd /Users/Iman/.npm/logeek/1.0.7/package/package.json written
18 silly publish { name: 'logeek',
18 silly publish   version: '1.0.7',
18 silly publish   description: 'A better way to Javascript logging',
18 silly publish   main: 'dist/logeek.js',
18 silly publish   dependencies: { 'gulp-babel': '^5.3.0' },
18 silly publish   devDependencies:
18 silly publish    { chai: '^3.4.0',
18 silly publish      gulp: '^3.9.0',
18 silly publish      'gulp-babel': '^5.3.0',
18 silly publish      'gulp-concat': '^2.6.0',
18 silly publish      'gulp-minify': '0.0.5',
18 silly publish      'gulp-rename': '^1.2.2',
18 silly publish      'gulp-sourcemaps': '^1.6.0',
18 silly publish      'gulp-uglify': '^1.5.2',
18 silly publish      'gulp-watch': '^4.3.5',
18 silly publish      matcha: '^0.7.0',
18 silly publish      mocha: '^2.3.3',
18 silly publish      sinon: '^1.17.2',
18 silly publish      testem: '^0.9.8' },
18 silly publish   scripts: { test: 'testem', benchmark: 'matcha benchmarks/benchmark.js' },
18 silly publish   repository: { type: 'git', url: 'git+https://github.com/ImanMh/logeek.git' },
18 silly publish   keywords: [ 'javascript', 'logging', 'logger', 'log', 'nodejs' ],
18 silly publish   author:
18 silly publish    { name: 'Iman Mohamadi',
18 silly publish      email: 'Iman@jsDecorator.com',
18 silly publish      url: 'http://jsDecorator.com' },
18 silly publish   license: 'ISC',
18 silly publish   bugs: { url: 'https://github.com/ImanMh/logeek' },
18 silly publish   homepage: 'https://github.com/ImanMh/logeek',
18 silly publish   readme: '# logeek\n*A log framework for geeks!*\nLogeek adds control and joy to your console log messages. It\'s a high performance, light weight tool for logging Javascript messages in node or browser. It can be combined with other tools such as Chalk to  extend it\'s powers even more.\n\n![Logeek benchmark results](http://j71.imgup.net/ScreenShot2cef.png)\n\n##Why not using native log?\nNative log is good, but you almost always delete it after you finish your work. One reason can be logs are for developers so it\'s better to remove them after finishing the job. The other reason is that when team working comes in, everyone try to get the upper hand in logging. You might have seen funny delimiters like ---------- My Name --------  or red color messages all over your console. Finally the team end up with a huge mess that no body can easily find their logs in it. logeek will fix all these issues in a very simple manner. Now that you know why using the native log is a bad idea, read the rest of this document to find the solution.\n\n##Installation\nYou can install it using ```bower``` or ```npm``` depending on your project type. \n```\n  npm install logeek\n```\nor\n```\n  bower install logeek\n```\nmake sure to include the ```dist/logeek.js``` in your HTML or your Node application after you download it.\n\n##Usage\nLogeek is easy to use, All you need to do is to include it and tell logeek which messages you want to be logged: \n\n```javascript\n  var logeek = require(\'logeek\');\n  \n  logeek.show(\'S\');\n  \n  logeek(\'M\').at(\'S\');\n```\n\nThis means that message \'M\' will be shown when scope \'S\' is visible. Suppose you are working on a copy module and you want to log some message:\n```javascript\n  var logeek = require(\'logeek\');\n  \n  logeek.show(\'copy\');                                  //setting the visible scope\n  \n  logeek(\'reading the list of files form db\').at(\'db\');\n  logeek(\'investigating authentication\').at(\'auth\');\n  logeek(\'starting copy\').at(\'copy\');                   //logs starting copy\n  logeek(\'50% done\').at(\'copy\');                        //logs 50% done\n  logeek(\'A file was skipped\').at(\'copy/skip\');\n  logeek(\'100% done\').at(\'copy\');                       //logs 100% done\n  logeek(\'saving state in database\').at(\'db\');\n```\n\nThis is what you\'ll see in your console: \n```\nstarting copy\n50% done\n100% done\n```\n\nIf you used ```logeek.show(\'copy/*\')``` your console would be like:\n```\nstarting copy\n50% done\nA file was skipped\n100% done\n```\n\n##Nested Scopes\nScopes are powerful ways to group your log message together and disable or enable them at a certain point. Not only you can create different groups, you can also nest these groups to create a relation between them  and control them much easier. \n```javascript\n  logeek.show(\'sync/db/*\');\n  logeek(\'communicating with server\').at(\'sync\');\n  logeek(\'pulling data for sync\').at(\'sync/db\');      //logs pulling...\n  logeek(\'Oops! there is not data in db\').at(\'sync/db/error\'); //logs Oops!...\n  \n  //You can also set reverse filters\n  logeek.show(\'*/error\');\n  logeek(\'creating database\').at(\'db\');\n  logeek(\'inserting new data\').at(\'db/data\');\n  logeek(\'error in insert\').at(\'db/data/error\');      //logs error in...\n  logeek(\'syncing data to server\').at(\'sync\');\n  logeek(\'server is not available\').at(\'sync/error\'); //logs server is not...\n```\n\n##compact mode\nWriting a long list of log messages can be a boring job. That\'s why logeek allows you to use an easier way of defining your message and scope at once. logeek uses \'@\' as the default delimiter for separating the message and the scope. The general format of compact message logging with logeek is:\n```javascript\n  logeek.show(\'copy\');\n  \n  logeek(\'M` @ `S\');\n  \n  //these two are the same\n  logeek(\'creating database\').at(\'db\');\n  logeek(\'creating database @ db\');\n  \n  //these two are the same\n  logeek(\'inserting new data\').at(\'db/data\');\n  logeek(\'inserting new data @ db/data\');\n  \n```\n\n##Chalk Integration\nLogeek plays well with other standard libraries such as Chalk. Here is an example of using Logeek with Chalk to control the console logs like a pro: \n\n```Javascript\nvar chalk = require(\'chalk\'),\n    logeek = require(\'logeek\');\n\nlogeek.show(\'copy/*\');\nlogeek(chalk.gray(\'copy started\').at(\'copy\');\nlogeek(chalk.green(\'50% done\').at(\'copy\');\nlogeek(chalk.gray(\'making md5 comparison\').at(\'md5\');\nlogeek(chalk.yellow(\'one file skipped\').at(\'copy/skip\');\nlogeek(chalk.red(\'error occured during coppy\').at(\'copy/error\');\nlogeek(chalk.gray(\'logging into db\').at(\'db\');\nlogeek(chalk.red(\'copy aborted\') + \'@ copy\');\n```\n\nAnd this is what you see in your console: \n\n![Logeek Console Log](http://m08.imgup.net/ScreenShoteedf.png)\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'fd091e22fd365e9ec9dff002956bb5d6703387ba',
18 silly publish   _id: 'logeek@1.0.7',
18 silly publish   _shasum: '4fe956e5d269269069907f8f5e6f07a0ff8e7bf3',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name logeek
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/logeek
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/Iman/.npm/logeek/1.0.7/package.tgz
26 verbose request uri https://registry.npmjs.org/logeek
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 4:32:45 PM
29 verbose request using bearer token for auth
30 verbose request id cd22d73068e80b28
31 http request PUT https://registry.npmjs.org/logeek
32 http 403 https://registry.npmjs.org/logeek
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Fri, 10 Jun 2016 12:02:47 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-lcy1129-LCY',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1465560166.340822,VS0,VE1525',
33 verbose headers   vary: 'Accept-Encoding' }
34 verbose request invalidating /Users/Iman/.npm/registry.npmjs.org/logeek on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 1.0.7." : logeek
36 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at Request.emit (events.js:110:17)
36 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1082:10)
36 verbose stack     at Request.emit (events.js:129:20)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
36 verbose stack     at IncomingMessage.emit (events.js:129:20)
36 verbose stack     at _stream_readable.js:908:16
37 verbose statusCode 403
38 verbose pkgid logeek
39 verbose cwd /Users/Iman/Documents/projects/logeek
40 error Darwin 14.5.0
41 error argv "node" "/usr/local/bin/npm" "publish"
42 error node v0.12.5
43 error npm  v3.5.0
44 error code E403
45 error "You cannot publish over the previously published version 1.0.7." : logeek
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
